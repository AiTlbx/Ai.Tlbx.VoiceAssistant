@namespace Ai.Tlbx.VoiceAssistant.WebUi.Components

<div class="inline-flex items-center gap-3 px-4 py-2 bg-gray-100 rounded-lg border border-gray-200">
    <label class="flex items-center cursor-pointer">
        <span class="text-sm font-medium text-gray-700 mr-3">
            @if (ShowDebugMode)
            {
                <span class="flex items-center gap-1">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-green-600" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z" clip-rule="evenodd" />
                    </svg>
                    Debug Mode
                </span>
            }
            else
            {
                <span class="flex items-center gap-1">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                    </svg>
                    Normal Mode
                </span>
            }
        </span>
        <div class="relative">
            <input type="checkbox" checked="@ShowDebugMode" @onchange="OnToggleChanged" class="sr-only peer" />
            <div class="w-11 h-6 bg-gray-300 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-400 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
        </div>
    </label>
    @if (!string.IsNullOrEmpty(TooltipText))
    {
        <div class="relative group">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400 cursor-help" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
            </svg>
            <div class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none whitespace-nowrap z-10">
                @TooltipText
                <div class="absolute top-full left-1/2 transform -translate-x-1/2 -mt-1">
                    <div class="border-4 border-transparent border-t-gray-800"></div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public bool ShowDebugMode { get; set; } = false;
    [Parameter] public EventCallback<bool> ShowDebugModeChanged { get; set; }
    [Parameter] public string TooltipText { get; set; } = "Toggle between normal and debug view for tool calls";
    
    private async Task OnToggleChanged(ChangeEventArgs e)
    {
        var newValue = (bool)(e.Value ?? false);
        if (ShowDebugModeChanged.HasDelegate)
        {
            await ShowDebugModeChanged.InvokeAsync(newValue);
        }
    }
}